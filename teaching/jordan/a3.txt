CSCI 1105/INFX 1604  Assignment 3
=================================

Place all of your solutions in a file called a3.py.

Provide appropriate documentation for all functions and classes you write.

0) All of the problems on this assignment must be solved recursively.
  All of the solutions you provide in this assignment will be based on the
  List and Empty classes that were defined in lectures:

class Empty:
   pass

class List:
   def __init__(self, head, tail):
      self.hd = head
      self.tl = tail

1) Write a function called sum that takes a List object and returns the sum of
  the elements in the List.  For example, sum(List(1, List(4, List(7, Empty))))
  should return 12.  You may assume that List used as the argument of sum
  will only contain numbers.

2) Write a function called prod_odd that takes a List object and returns the
  product of all of the odd elements in the given List.  For example,
  prod_odd(List(1, List(2, List(3, List(5, List(6, Empty)))))) should return
  1 * 3 * 5 = 15.  You may assume that the given List object contains only
  integer entries.

3) Write a function called contains_evens that takes a List object and returns
  True if the List contains at least one even element, and False otherwise.
  (If the List is empty, the result should be False.)  You may assume that the
  given List object contains only integer entries.

4) This question uses the two-dimensional Point class from lectures in addition
  to the classes Empty and List above.  Write a function called largest_coords
  that takes a List Object of Point objects as a parameter, and returns a List
  object of the larger of the two coordinates for each Point object.  For
  example,
  largest_coords(List(Point(1,4), List (Point(5,2), List(Point(8,7), Empty))))
  should return a List object equivalent to List(4, List(5, List(8, Empty))).

5) Write a function called is_ascending that takes a List object and returns
  True if each element of the List is at least as large as the previous
  element, and False otherwise.  For Lists containing 0 or 1 elements, the
  function should return True.  You may assume that the List object given as an
  argument contains only numbers.  Note:  the structure of this function will
  not quite match the recursive definition of Lists given in class, but there
  is a way to recursively describe Lists such that the function's structure
  matches the description of the List.  For a small BONUS, give such a
  recursive description of Lists as part of your documentation for this
  function.

